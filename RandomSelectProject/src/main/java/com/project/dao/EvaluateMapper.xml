<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dao.EvaluateMapper">
	<!--관리자, 회원 : 유저 아이디로 평가 목록 열람 -->
	<select id="getEvaluateListByUserId" parameterType="String"
		resultType="EvaluateDTO">
		select * from evaluate where userid = #{userId}
	</select>
	<!--구성회:회원:식당평가한 목록 -->
	<select id="getEvaluateListByMemId" parameterType="String"
		resultType="EvaluateDTO">
		select evaluateId, evaluateScore, evaluateDate, restntName
		from Evaluate e, restnt r
		where
		e.memId=#{memId}
		and e.restntId = r.restntId
		and evaluateScore != -1	
	</select>
	
	<!--구성회:회원:평가하지 않은 목록 -->
	<select id="getEvaluateListByMemId" parameterType="String"
		resultType="EvaluateDTO">
		select evaluateId, evaluateScore, evaluateDate, restntName
		from Evaluate e, restnt r
		where
		e.memId=#{memId}
		and e.restntId = r.restntId
		and evaluateScore = -1	
	</select>

	<!-- 회원: 평가한 방문리스트 수정 -->
	<update id="setEvaluateInfoByEvaluateTerms" parameterType="EvaluateDTO">

		update Evaluate set evalScore =#{evalScore},

		update Evaluate set
		evalScore =#{evalScore}

		where evalId=#{evalId}
	</update>

	<!-- 회원: 평가안한 방문리스트 -->
	<select id="getnEvaluateListByMemid" parameterType="EvaluateDTO"
		resultType="EvaluateDTO">
		select evaluateId, evaluateDate, RestntId from Evaluate
		where
		memId=#{memId}
		select restntName where
		evaluate.restntId=restnt.restntId
		<!--어떻게 구현하지??? -->
	</select>
	<!--user가 똑같은 식당을 날짜가 다르게 몇번을 방문할 수 있는데 이것은 방문테이블에서 레스토랑 아이디를 매번 가져와야하는 
		번거로움이 있음 그리하여 평가테이블에 레스토랑아이디 부분을 넣어서 바로 평가테이블에서 레스토랑 아이디 부분을 쓸 수있게 해야함. 그리고 
		id에 평가안한 것을 -1로 점수를 넣어줘서 평가한 방문리스트와 평가안한 방문리스트가 이것을 같이 사용하되 기본값-1은 평가안한 것 
		점수 주면 평가 된 점수로 보여주게 함 -->

	<!-- 회원: 평가안한 방문리스트 입력 <update id="setEvaluateInfoByEvaluateTerms" parameterType="EvaluateDTO"> 
		update Evaluate set evalScore =#{evalScore}, where evalId=#{evalId} </update> -->







	<!--///////////////////////////////////////////////////////// -->


	<!--회원: 평가한 식당목록 -->
	<!-- 방문날짜,restntId -->
	<select id="getVisitsByMemid" parameterType="String" resultType="EvaluateDTO">
		select restntId,evaluatedate from evaluate where memid =#{memId} and
		evaluate.score != '-1'
		orderby visitdate desc
	</select>

	<!-- 식당이름 -->
	<select id="getRestntnameByRestId" parameterType="String"
		resultType="EvaluateDTO">
		select restntname from restnt where restnt.restntid
		=#{restntid} and evaluate.restntid=#{restntid}
	</select>

	<!-- 평가점수 -->
	<select id="getScoreByEvaluateTerms" parameterType="String"
		resultType="EvaluateDTO">
		select score from evaluate where memid=#{memid} and
		restntid=#{restntid}
	</select>



	<!-- 회원: 평가 안한 식당목록 -->
	<!-- 방문날짜,restntId -->
	<select id="getNevaluateListByMemId" parameterType="String"
		resultType="EvaluateDTO">
		select restntId,visitdate from visit where memid =#{memId}
		and evaluate.score = '-1'
		orderby visitdate desc
	</select>

	<!-- 회원: 식당 평가 수정 ,입력 -->
	<update id="setScoreByEvaluateTerms" parameterType="EvaluateDTO">
		update
		evaluate set score=#{score} where evalid =#{evalid} and
		memid=#{memid}
	</update>


</mapper>
